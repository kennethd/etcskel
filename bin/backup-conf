#!/bin/bash
# Copyright 2012 Kenneth Dombrowski <kenneth@ylayali.net>
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#    http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
set -x
logger "running backup-conf for $LOGNAME"

# backup-conf 
# dumps some system info to the filesystem for backup-full & backup-incremental

DATEI="$( date +'%Y-%m-%d' )"
HOST="$( hostname )"

# override by exporting non-default value before calling
[ -z "$BACKUP_CONF_DIR" ] && BACKUP_CONF_DIR="$HOME/backups/conf"
[ -z "$BACKUP_ETC" ] && BACKUP_ETC="$HOME/etc/backup"
[ -z "$BACKUP_CONF_KEEP_DAYS" ] && BACKUP_CONF_KEEP_DAYS=5

[ ! -e "$BACKUP_ETC" ] && mkdir -p "$BACKUP_ETC"
[ ! -r "$BACKUP_ETC" ] || [ ! -w "$BACKUP_ETC" ] && exit 1

# allow disabling backups by touching a file
[ -e "$BACKUP_ETC/disable" ] || [ -e "$BACKUP_ETC/disabled" ] && exit 0

[ ! -e "$BACKUP_CONF_DIR" ] && mkdir -p "$BACKUP_CONF_DIR"
[ ! -w "$BACKUP_CONF_DIR" ] && exit 1

# delete old backups 
find "$BACKUP_CONF_DIR" -daystart -mtime +$BACKUP_CONF_KEEP_DAYS -type f -print0 | xargs -r -0 rm -f

# dump config & meta info for backups
crontab -l > "$BACKUP_CONF_DIR/crontab-l.$HOST.$LOGNAME.$DATEI.txt"
perl -e 'use ExtUtils::Installed; my $inst = ExtUtils::Installed->new(); my @modules = $inst->modules(); print $_ . " (" . $inst->version($_) . ")\n" for @modules;' > "$BACKUP_CONF_DIR/perl-extutils.$HOST.$DATEI.txt"
# following requires 'pip', one of many python module installers (installable with 'easy_install pip')
which pip >/dev/null && pip freeze > "$BACKUP_CONF_DIR/pip_freeze.$HOST.$DATEI.txt" 
which gem >/dev/null && gem list > "$BACKUP_CONF_DIR/gem_list.$HOST.$DATEI.txt"
which npm >/dev/null && npm ls -g > "$BACKUP_CONF_DIR/npm_ls-g.$HOST.$DATEI.txt"

if [ "$LOGNAME" = "root" ]; then
    PATH="/sbin:$PATH"; export PATH
    $HOME/bin/system-info 2>/dev/null > "$BACKUP_CONF_DIR/system-info.$HOST.$DATEI.txt"
    which iptables >/dev/null && iptables -nvL > "$BACKUP_CONF_DIR/iptables-nvL.$HOST.$DATEI.txt"
    which dpkg >/dev/null && dpkg --get-selections > "$BACKUP_CONF_DIR/dpkg--get-selections.$HOST.$DATEI.txt"
    which mysqldump >/dev/null && mysqldump --opt --databases mysql > "$BACKUP_CONF_DIR/mysql.$HOST.$DATEI.sql"
    which lvm >/dev/null && lvm dumpconfig > "$BACKUP_CONF_DIR/lvm-dumpconfig.$HOST.$DATEI.txt"
fi
