#!/bin/bash
logger "running backup-full for $LOGNAME"
set -x

# backup-full
# creates backup tarfile as configured from directories listed in ~/etc/backup/{include,exclude}

DATEI="$( date +'%Y-%m-%d' )"
DATEW="$( date +'%w' )"
HOST="$( hostname )"

# override by exporting non-default value before calling
[ -z "$BACKUP_FULL_DIR" ] && BACKUP_FULL_DIR="$HOME/backups/full"
[ -z "$BACKUP_ETC" ] && BACKUP_ETC="$HOME/etc/backup"
[ -z "$BACKUP_FULL_KEEP_DAYS" ] && BACKUP_FULL_KEEP_DAYS=13

[ ! -e "$BACKUP_ETC" ] && mkdir -p "$BACKUP_ETC"
[ ! -r "$BACKUP_ETC" ] || [ ! -w "$BACKUP_ETC" ] && exit 1

# allow disabling backups by touching a file
[ -e "$BACKUP_ETC/disable" ] || [ -e "$BACKUP_ETC/disabled" ] && exit 0

[ ! -e "$BACKUP_FULL_DIR" ] && mkdir -p "$BACKUP_FULL_DIR"
[ ! -w "$BACKUP_FULL_DIR" ] && exit 1

# delete old backups 
find "$BACKUP_FULL_DIR" -daystart -mtime +$BACKUP_FULL_KEEP_DAYS -type f -print0 | xargs -r -0 rm -f

# read each line of $BACKUP_ETC/include into an array element
IFS="
"
if [ -e "$BACKUP_ETC/include" ]; then
    for line in $( cat "$BACKUP_ETC/include" ); do
        # allow for commented out lines in file
        echo "$line" | grep '^\s*#' >/dev/null
        if [ "$?" = "0" ]; then continue; fi
        # ignore lines containing only whitespace
        echo "$line" | grep '^\s*$' >/dev/null
        if [ "$?" = "0" ]; then continue; fi
        DIRS[${#DIRS[*]}]="$( echo $line | tr -t '\n' '' | sed 's#\([ \t]\)#\\\1#g' )"
    done
fi
IFS=" "

# default backup target to $HOME
if [ ${#DIRS[*]} = 0 ]; then
    DIRS=( "$HOME" )
fi

[ ! -e "$BACKUP_ETC/exclude" ] && touch "$BACKUP_ETC/exclude"

nice tar --create \
    --file "$BACKUP_FULL_DIR/$HOST.$LOGNAME.$DATEI.tar.gz" \
    --blocking-factor 126 \
    --label "Full Backup of $HOST for $LOGNAME on $DATEI" \
    --exclude-from "$BACKUP_ETC/exclude" \
    --gzip \
    ${DIRS[*]}

