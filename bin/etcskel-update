#!/bin/bash
set -x
[ -r "$HOME/etc/etcskel/config" ] && . "$HOME/etc/etcskel/config"
ETCSKEL_REMOTE_URL="${ETCSKEL_REMOTE_URL:-git://git.ylayali.net/etcskel.git}"

EXPORT_DIR=$( mktemp -d )
trap 'rm -rf "$EXPORT_DIR"' EXIT

git archive --remote="$ETCSKEL_REMOTE_URL" HEAD --format=tar | tar -C "$EXPORT_DIR" -xvf -
[ $? -ne 0 ] && exit $?

cd "$EXPORT_DIR"
IFS='
'
FILES=$( find . -type f -print )

# create backup of files before continuing
ETCSKEL_BACKUP_DIR="${ETCSKEL_BACKUP_DIR:-$HOME/backups/etcskel}"
if [ ! -d "$ETCSKEL_BACKUP_DIR" ]
then
    mkdir -p "$ETCSKEL_BACKUP_DIR"
    [ $? -ne 0 ] && exit $?
fi
TARFILE="$ETCSKEL_BACKUP_DIR/etcskel-update-` date -I `.$$.tar.gz"
# TODO: verify this does indeed grab files from $HOME & not $EXPORT_DIR
# TODO: verify this does not fail when some files do not exist in $HOME
tar -C "$HOME" -czf "$TARFILE" ${FILES[@]}
[ $? -ne 0 ] && exit $?
# success, delete old backups
find "$ETCSKEL_BACKUP_DIR" -daystart -mtime +5 -type f -print0 | xargs -r -0 rm -f

for FILE in $FILES
do
    # remove leading ./
    FILE="${FILE##./}"
    # DO NOT OVERWRITE files listed in no-overwrite UNLESS file does not
    # already exist on disk.  This is useful when installing things like
    # var/lib/logrotate/status which we will be passing control of to other
    # packages 
    if grep -c "^$FILE\$" "$HOME/etc/etcskel/no-overwrite" 2>&1 >/dev/null \
        && test -e "$HOME/$FILE"
    then
        [ "" != "$ETCSKEL_UPDATE_VERBOSE" ] && echo not writing: $FILE >&2
        # if verbose show a diff of the two versions, if different
    else
        [ "" != "$ETCSKEL_UPDATE_VERBOSE" ] && echo writing: $FILE >&2
        # if $FILE contains any path info, make sure directories exist
        RELPATH="${FILE%/*}"
        if [ "$FILE" != "$RELPATH" ]
        then
            mkdir -p "$HOME/$RELPATH"
            [ $? -ne 0 ] && exit $?
        fi
        cp "./$FILE" "$HOME/$FILE"
    fi
done

exit 0
